add task progress from command line

e.g. task-tracker.sh "don't bite your nails" y

- appropriate error handling from this if the task does not exist

stretch goal - add functionality to specify how long a task should run for


prompt for day and month of retrospective completion


limit tasks to 5 to make life easier?


need go back loop from 0 in decisions


jmettraus / rufus scheduler


scheduled cron jobs to open the app?
- cron on macos?


modules
mixins
classes
methods


search directory and add text files to an array - then add array to menus?



 delete(file_name, ...) â†’ integer

Deletes the named files, returning the number of names passed as arguments. Raises an exception on any error. Since the underlying implementation relies on the unlink(2) system call, the type of exception raised depends on its error type (see linux.die.net/man/2/unlink) and has the form of e.g. Errno::ENOENT.

See also Dir.rmdir.


Is there a way to have Dir.chdir as a module or something so you don't have to exit back out?

input error message is a candidate for DRY


stop input later than the current day?

remove dates a task completed?


issues with . , etc. in file names???


error handling is more than just handling exceptions
checking data dypes before exceptions can arise, etc.

file not found error handling

begin
    File.read('balance.txt)

rescue Errno::ENOENT
puts "error: couldn't open bank balance
system('touch balance.txt')

end


29th Feb 2021?
30th Feb 2020?
